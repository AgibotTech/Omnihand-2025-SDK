<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find omnihand_description)/urdf/xacro/const.xacro" />
    <xacro:include filename="$(find omnihand_description)/urdf/xacro/finger.xacro" />
    <xacro:include filename="$(find omnihand_description)/urdf/xacro/material.xacro" />
    <xacro:property name="mesh_path" value="package://omnihand_description/meshes" />

    <xacro:macro name="hand" params="name mirror mirror_mesh *origin">

        <joint name="${name}_palm_joint" type="fixed">
            <xacro:insert_block name="origin" />
            <parent link="base_link" />
            <child link="${name}_palm" />
        </joint>

        <link name="${name}_palm">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <xacro:if value="${mirror_mesh == True}">
                        <mesh filename="${mesh_path}/l_palm.STL" />
                    </xacro:if>
                    <xacro:if value="${mirror_mesh == False}">
                        <mesh filename="${mesh_path}/r_palm.STL" />
                    </xacro:if>
                </geometry>
                <material name="silver" />
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 ${palm_collision_cylinder_z}" />
                <geometry>
                    <cylinder radius="${palm_collision_cylinder_r}"
                        length="${palm_collision_cylinder_l}" />
                </geometry>
            </collision>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 ${palm_collision_box_z}" />
                <geometry>
                    <box
                        size="${palm_collision_box_l} ${palm_collision_box_w} ${palm_collision_box_h}" />
                </geometry>
            </collision>
            <inertial>
                <origin rpy="0 0 0" xyz="${palm_com_x} ${palm_com_y*mirror} ${palm_com_z}" />
                <mass value="${palm_mass}" />
                <inertia
                    ixx="${palm_ixx}" ixy="${palm_ixy*mirror}" ixz="${palm_ixz}"
                    iyy="${palm_iyy}" iyz="${palm_iyz*mirror}" izz="${palm_izz}" />
            </inertial>
        </link>

        <!-- thumb  -->
        <joint name="${name}_thumb_roll_joint" type="revolute">
            <origin xyz="${thumb_roll_x} ${thumb_roll_y*mirror} ${thumb_roll_z}" rpy="0 0 0" />
            <parent link="${name}_palm" />
            <child link="${name}_thumb_roll" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${thumb_roll_torque_max}" velocity="${thumb_roll_velocity_max}"
                    lower="${thumb_roll_position_max*mirror}"
                    upper="${thumb_roll_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${thumb_roll_torque_max}" velocity="${thumb_roll_velocity_max}"
                    lower="${thumb_roll_position_min}" upper="${thumb_roll_position_max}" />
            </xacro:if>
        </joint>

        <link name="${name}_thumb_roll">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <xacro:if value="${mirror_mesh == True}">
                        <mesh filename="${mesh_path}/l_thumb_roll.STL" />
                    </xacro:if>
                    <xacro:if value="${mirror_mesh == False}">
                        <mesh filename="${mesh_path}/r_thumb_roll.STL" />
                    </xacro:if>
                </geometry>
                <material name="blue" />
            </visual>
            <inertial>
                <origin rpy="0 0 0"
                    xyz="${thumb_roll_com_x} ${thumb_roll_com_y*mirror} ${thumb_roll_com_z}" />
                <mass value="${thumb_roll_mass}" />
                <inertia
                    ixx="${thumb_roll_ixx}" ixy="${thumb_roll_ixy*mirror}"
                    ixz="${thumb_roll_ixz}"
                    iyy="${thumb_roll_iyy}" iyz="${thumb_roll_iyz*mirror}" izz="${thumb_roll_izz}" />
            </inertial>
        </link>

        <joint name="${name}_thumb_abad_joint" type="revolute">
            <origin xyz="${thumb_abad_x} ${thumb_abad_y*mirror} ${thumb_abad_z}" rpy="0 0 0" />
            <parent link="${name}_thumb_roll" />
            <child link="${name}_thumb_abad" />
            <axis xyz="0 0 1" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${thumb_abad_torque_max}" velocity="${thumb_abad_velocity_max}"
                    lower="${thumb_abad_position_max*mirror}"
                    upper="${thumb_abad_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${thumb_abad_torque_max}" velocity="${thumb_abad_velocity_max}"
                    lower="${thumb_abad_position_min}" upper="${thumb_abad_position_max}" />
            </xacro:if>
        </joint>

        <link name="${name}_thumb_abad">
            <visual>
                <xacro:if value="${mirror_mesh == True}">
                    <origin rpy="0 0 3.14" xyz="0 0 0" />
                </xacro:if>
                <xacro:if value="${mirror_mesh == False}">
                    <origin rpy="0 0 0" xyz="0 0 0" />
                </xacro:if>
                <geometry>
                    <mesh filename="${mesh_path}/thumb_abad.STL" />
                </geometry>
                <material name="blue" />
            </visual>
            <inertial>
                <origin rpy="0 0 0"
                    xyz="${thumb_abad_com_x} ${thumb_abad_com_y*mirror} ${thumb_abad_com_z}" />
                <mass value="${thumb_abad_mass}" />
                <inertia
                    ixx="${thumb_abad_ixx}" ixy="${thumb_abad_ixy*mirror}"
                    ixz="${thumb_abad_ixz}"
                    iyy="${thumb_abad_iyy}" iyz="${thumb_abad_iyz*mirror}" izz="${thumb_abad_izz}" />
            </inertial>
        </link>

        <joint name="${name}_thumb_mcp_joint" type="revolute">
            <origin xyz="${thumb_mcp_x} ${thumb_mcp_y*mirror} ${thumb_mcp_z}"
                rpy="0 0 0" />
            <parent link="${name}_thumb_abad" />
            <child link="${name}_thumb_mcp" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${thumb_mcp_torque_max}" velocity="${thumb_mcp_velocity_max}"
                    lower="${thumb_mcp_position_max*mirror}"
                    upper="${thumb_mcp_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${thumb_mcp_torque_max}" velocity="${thumb_mcp_velocity_max}"
                    lower="${thumb_mcp_position_min}" upper="${thumb_mcp_position_max}" />
            </xacro:if>
        </joint>
        <link name="${name}_thumb_mcp">
            <visual>
                <xacro:if value="${mirror_mesh == True}">
                    <origin rpy="0 0 3.14" xyz="0 0 0" />
                </xacro:if>
                <xacro:if value="${mirror_mesh == False}">
                    <origin rpy="0 0 0" xyz="0 0 0" />
                </xacro:if>
                <geometry>
                    <mesh filename="${mesh_path}/thumb_mcp.STL" />
                </geometry>
                <material name="brown" />
            </visual>
            <collision>
                <origin rpy="0 0 0"
                    xyz="0 ${thumb_mcp_collision_box_y*mirror} ${thumb_mcp_collision_box_z}" />
                <geometry>
                    <box
                        size="${thumb_mcp_collision_box_l} ${thumb_mcp_collision_box_w} ${thumb_mcp_collision_box_h}" />
                </geometry>
            </collision>
            <inertial>
                <origin rpy="0 0 0"
                    xyz="${thumb_mcp_com_x} ${thumb_mcp_com_y*mirror} ${thumb_mcp_com_z}" />
                <mass value="${thumb_mcp_mass}" />
                <inertia
                    ixx="${thumb_mcp_ixx}" ixy="${thumb_mcp_ixy*mirror}" ixz="${thumb_mcp_ixz}"
                    iyy="${thumb_mcp_iyy}" iyz="${thumb_mcp_iyz*mirror}" izz="${thumb_mcp_izz}" />
            </inertial>
        </link>

        <joint name="${name}_thumb_pip_joint" type="revolute">
            <origin xyz="${thumb_pip_x} ${thumb_pip_y*mirror} ${thumb_pip_z}" rpy="0 0 0" />
            <parent link="${name}_thumb_mcp" />
            <child link="${name}_thumb_pip" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${thumb_pip_torque_max}" velocity="${thumb_pip_velocity_max}"
                    lower="${thumb_pip_position_max*mirror}"
                    upper="${thumb_pip_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${thumb_pip_torque_max}" velocity="${thumb_pip_velocity_max}"
                    lower="${thumb_pip_position_min}" upper="${thumb_pip_position_max}" />
            </xacro:if>
            <mimic
                joint="${name}_thumb_mcp_joint"
                multiplier="${thumb_pip_multiplier}"
                offset="0" />
        </joint>
        <link name="${name}_thumb_pip">
            <visual>
                <xacro:if value="${mirror_mesh == True}">
                    <origin rpy="0 0 3.14" xyz="0 0 0" />
                </xacro:if>
                <xacro:if value="${mirror_mesh == False}">
                    <origin rpy="0 0 0" xyz="0 0 0" />
                </xacro:if>
                <geometry>
                    <mesh filename="${mesh_path}/thumb_pip.STL" />
                </geometry>
                <material name="white" />
            </visual>
            <collision>
                <origin rpy="${thumb_pip_collision_box_rotr*mirror} 0 0"
                    xyz="0 ${thumb_pip_collision_box_y*mirror} ${thumb_pip_collision_box_z}" />
                <geometry>
                    <box
                        size="${thumb_pip_collision_box_l} ${thumb_pip_collision_box_w} ${thumb_pip_collision_box_h}" />
                </geometry>
            </collision>
            <inertial>
                <origin rpy="0 0 0"
                    xyz="${thumb_pip_com_x} ${thumb_pip_com_y*mirror} ${thumb_pip_com_z}" />
                <mass value="${thumb_pip_mass}" />
                <inertia
                    ixx="${thumb_pip_ixx}" ixy="${thumb_pip_ixy*mirror}" ixz="${thumb_pip_ixz}"
                    iyy="${thumb_pip_iyy}" iyz="${thumb_pip_iyz*mirror}" izz="${thumb_pip_izz}" />
            </inertial>
        </link>

        <joint name="${name}_thumb_dip_joint" type="revolute">
            <origin xyz="${thumb_dip_x} ${thumb_dip_y*mirror} ${thumb_dip_z}" rpy="0 0 0" />
            <parent link="${name}_thumb_pip" />
            <child link="${name}_thumb_dip" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${thumb_dip_torque_max}" velocity="${thumb_dip_velocity_max}"
                    lower="${thumb_dip_position_max*mirror}"
                    upper="${thumb_dip_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${thumb_dip_torque_max}" velocity="${thumb_dip_velocity_max}"
                    lower="${thumb_dip_position_min}" upper="${thumb_dip_position_max}" />
            </xacro:if>
            <mimic
                joint="${name}_thumb_mcp_joint"
                multiplier="${thumb_dip_multiplier}"
                offset="0" />
        </joint>
        <link name="${name}_thumb_dip">
            <visual>
                <xacro:if value="${mirror_mesh == True}">
                    <origin rpy="0 0 3.14" xyz="0 0 0" />
                </xacro:if>
                <xacro:if value="${mirror_mesh == False}">
                    <origin rpy="0 0 0" xyz="0 0 0" />
                </xacro:if>
                <geometry>
                    <mesh filename="${mesh_path}/thumb_dip.STL" />
                </geometry>
                <material name="white" />
            </visual>
            <collision>
                <origin rpy="${thumb_dip_collision_cylinder_rotr*mirror} 0 0"
                    xyz="0 ${thumb_dip_collision_cylinder_y*mirror} ${thumb_dip_collision_cylinder_z}" />
                <geometry>
                    <cylinder radius="${thumb_dip_collision_cylinder_r}"
                        length="${thumb_dip_collision_cylinder_l}" />
                </geometry>
            </collision>
            <inertial>
                <origin rpy="0 0 0"
                    xyz="${thumb_dip_com_x} ${thumb_dip_com_y*mirror} ${thumb_dip_com_z}" />
                <mass value="${thumb_dip_mass}" />
                <inertia
                    ixx="${thumb_dip_ixx}" ixy="${thumb_dip_ixy*mirror}" ixz="${thumb_dip_ixz}"
                    iyy="${thumb_dip_iyy}" iyz="${thumb_dip_iyz*mirror}" izz="${thumb_dip_izz}" />
            </inertial>
        </link>
        <joint name="${name}_thumb_tip_joint" type="fixed">
            <origin xyz="0 ${thumb_tip_y*mirror} ${thumb_tip_z}" rpy="0 0 0" />
            <parent link="${name}_thumb_dip" />
            <child link="${name}_thumb_tip" />
        </joint>
        <link name="${name}_thumb_tip">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <sphere radius="1e-3" />
                </geometry>
                <material name="white" />
            </visual>
        </link>

        <!-- finger  -->
        <joint name="${name}_index_abad_joint" type="revolute">
            <origin xyz="${index_abad_x} ${index_abad_y*mirror} ${index_abad_z}" rpy="0 0 0" />
            <parent link="${name}_palm" />
            <child link="${name}_index_abad" />
            <axis xyz="1 0 0" />

            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${index_abad_torque_max}" velocity="${index_abad_velocity_max}"
                    lower="${index_abad_position_max*mirror}"
                    upper="${index_abad_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${index_abad_torque_max}" velocity="${index_abad_velocity_max}"
                    lower="${index_abad_position_min}" upper="${index_abad_position_max}" />
            </xacro:if>
        </joint>
        <xacro:finger prefix="${name}_index" mesh_path="${mesh_path}" />

        <joint name="${name}_middle_abad_joint" type="fixed">
            <origin xyz="${middle_abad_x} ${middle_abad_y*mirror} ${middle_abad_z}" rpy="0 0 0" />
            <parent link="${name}_palm" />
            <child link="${name}_middle_abad" />
        </joint>
        <xacro:finger prefix="${name}_middle" mesh_path="${mesh_path}" />

        <joint name="${name}_ring_abad_joint" type="revolute">
            <origin xyz="${ring_abad_x} ${ring_abad_y*mirror} ${ring_abad_z}" rpy="0 0 0" />
            <parent link="${name}_palm" />
            <child link="${name}_ring_abad" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${ring_abad_torque_max}" velocity="${ring_abad_velocity_max}"
                    lower="${ring_abad_position_max*mirror}"
                    upper="${ring_abad_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${ring_abad_torque_max}" velocity="${ring_abad_velocity_max}"
                    lower="${ring_abad_position_min}" upper="${ring_abad_position_max}" />
            </xacro:if>
        </joint>
        <xacro:finger prefix="${name}_ring" mesh_path="${mesh_path}" />


        <joint name="${name}_pinky_abad_joint" type="revolute">
            <origin xyz="${pinky_abad_x} ${pinky_abad_y*mirror} ${pinky_abad_z}" rpy="0 0 0" />
            <parent link="${name}_palm" />
            <child link="${name}_pinky_abad" />
            <axis xyz="1 0 0" />
            <xacro:if value="${mirror_mesh == True}">
                <limit effort="${pinky_abad_torque_max}" velocity="${pinky_abad_velocity_max}"
                    lower="${pinky_abad_position_max*mirror}"
                    upper="${pinky_abad_position_min*mirror}" />
            </xacro:if>
            <xacro:if value="${mirror_mesh == False}">
                <limit effort="${pinky_abad_torque_max}" velocity="${pinky_abad_velocity_max}"
                    lower="${pinky_abad_position_min}" upper="${pinky_abad_position_max}" />
            </xacro:if>
        </joint>
        <xacro:finger prefix="${name}_pinky" mesh_path="${mesh_path}" />

    </xacro:macro>
</robot>